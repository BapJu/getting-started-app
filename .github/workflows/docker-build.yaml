name: build-docker

on: [push]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List files
        run: ls -la

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Get next version
        id: get_next_version
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$latest_tag" ]; then
            next_version="1.0.0"
          else
            IFS='.' read -r -a version_parts <<< "$latest_tag"
            major=${version_parts[0]}
            minor=${version_parts[1]}
            patch=${version_parts[2]}
            next_version="$major.$minor.$((patch + 1))"
          fi
          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t my-docker-image:${{ env.next_version }} .

      - name: List Docker images
        run: docker images

      - name: Push Docker image
        run: docker push my-docker-image:${{ env.next_version }}

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            const nextVersion = '${{ env.next_version }}';
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${nextVersion}`,
              sha: context.sha
            });
